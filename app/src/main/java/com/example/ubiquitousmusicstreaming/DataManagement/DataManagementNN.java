package com.example.ubiquitousmusicstreaming.DataManagement;

import android.net.wifi.ScanResult;

import com.example.ubiquitousmusicstreaming.Models.LongStrings;

import java.util.Arrays;
import java.util.List;

public class DataManagementNN implements IDataManagement {
    private final double[] bh;
    private final double[] bo;
    private final double[][] wh;
    private final double[][] wo;
    private final String[] distinctBSSID;

    public DataManagementNN() {

        bh = new double[] {0.0, 0.0, 0.0, 0.0};
        bo = new double[] {0.0, 0.0, 0.0};
        wh = new double[][] {{0.568245950839346, -0.190013699552481, 0.606255163674175, 1.437098795428468},{0.026720068645429, -0.259158190827031, 1.691283491914922, 0.756464274992676},{-0.201311073964235, 0.523224292967566, -0.337951230402325, -0.465212302284614},{0.583883854377286, -1.934191058191792, -1.558924184795236, -0.554712852874062},{-0.634330164266516, 0.300007376496951, -0.709951651610271, -1.387462981167167},{1.898140295408397, -0.251677247626876, 0.278373406392122, -1.414153232920420},{-0.120737644843576, 0.092135632485976, -0.933876312540541, 0.398239290704756},{-0.172181242283759, -0.317237570269368, -0.392642341231459, 1.862987741207017},{0.506357190201866, -1.064371019565711, 1.115323408805876, -1.162899694909415},{0.652879469674160, -1.924108686857959, -1.011805508312281, 0.322553380868733},{0.829202685348737, 0.121497073645518, -0.142850993389874, -0.380970109700903},{-1.388739368651188, -0.712653476643974, -0.396664764591265, 1.082537917303396},{0.532281007442268, -1.793504670731762, 0.385248139106531, -0.415865882267349},{-0.676922000305959, 0.611676288840868, 1.030999522495951, 0.931280119116199},{-0.695565328476655, -0.297707205050039, 0.433621841593200, 1.016210232857527},{-0.479174237845290, -0.185658976663817, -1.106334974006028, -1.196206624080671},{0.589172632822490, 1.277472065452063, -0.329029446641454, 0.827842849354441},{0.135787269111996, -0.724767806697278, 0.101504556144935, 1.360383500626290},{-0.035826039109952, 1.564643655814006, -2.619745104089744, 0.821902504375224},{0.168476265563648, -0.354385477937647, 0.050271814178132, -2.078865932455862},{0.103112187691465, 0.353034909663226, 1.659776569758790, -0.482185558886100},{-0.808493602893188, -0.501757043584537, 0.915402117702074, 0.328751109659684},{-0.529760203767039, 0.513267433113356, 0.097077549348040, 0.968644990532889},{-0.702053093877352, -0.327662146597768, -0.392108153132158, -1.463514948132119},{0.296120277064576, 0.261055272179889, 0.005113456642461, -0.234587133375147},{-1.415370742050414, -0.420645322765359, -0.342714516526769, -0.802277269221619},{-0.161285711666009, 0.404050856814538, 1.886185901210530, 0.174577812831839},{0.257550390722764, -0.074445915766167, -1.918771215299041, -0.026513875449217},{0.060230209941026, 2.463242112485286, -0.192360964781123, 0.301547342333612},{-0.034711769705243, -1.168678037619532, 1.142822814515021, 0.751933032686774},{0.682474810212105, -0.947671325137377, 1.277874303783488, -1.487242315433453},{0.586857093800270, 2.190455625809979, -0.990536325130688, -0.566297729602772},{-0.010153554925266, -0.542199568945534, -1.677019300369923, -0.017809786486192},{-1.062303713726105, 0.473592430635182, -0.919424234233803, 1.549934405017539},{-0.783253292336237, -0.322061516205676, 0.813517217369670, -1.230864316433955},{0.227459934604129, 1.307142754282428, -1.607483234561228, 0.184633858532304},{0.259882794248424, 0.781822871777310, -1.236950710878082, -1.320456613084276},{0.521941565616898, 0.296984673233186, 0.250492850345877, 0.346448209496976},{-0.680024721578491, 0.232253697161004, 0.293072473298681, -0.714351418026368},{1.865774511144757, 0.473832920911788, -1.191303497202649, 0.656553608633830},{-0.974681670227321, 0.787084603742452, 1.158595579007404, -0.820682318351710},{0.963376129244322, 0.412780926936498, 0.822060159994490, 1.896792982653947},{-0.245388116002870, -0.753736164357490, -0.889514429625523, -0.815810284965438},{-0.077101709414104, 0.341151974816644, 0.276690799330019, 0.827183249036024},{0.013001891877907, 1.453534077157317, -0.264656833237956, 2.720169166589619},{0.625667347765006, -0.857157556416283, -1.070892498061112, 0.482472415243185},{-0.223462785325851, 0.714000494092092, 0.473237624573545, -0.072828912656873},{-0.846793718068405, -1.514847224685865, -0.446514952067021, 0.856398794323472},{0.214093744130204, -1.245738778711988, 0.173180925851182, 0.385317379728837},{-0.883857436201133, 0.153725105945528, 0.058208718446000, -1.142970297830623},{0.357787360348283, 0.560784526368234, 1.083051243175277, 1.053802052034903},{-1.377669367957091, -0.937825039915123, 0.515035267208660, 0.513785950912209},{0.515047686306048, 3.852731490654721, 0.570890510693167, 1.135565640180599},{0.954001763493202, 0.651391251305798, -0.315269244640346, 0.758969220493267},{-0.772825214537572, -0.236818606740009, -0.485363547829103, 0.081874139386323},{2.314658566673509, -1.867265192591748, 0.686260190374513, -1.612715871189652},{-0.471931865789433, 1.088950596967366, 0.064280019095463, -1.077744777929306},{-0.715303709259968, 0.679597748934676, -0.730366631717137, 0.216458589581975},{0.045571839903814, -0.651600347605817, 2.143944089325326, 0.633919022318011},{-2.025142586657607, 0.186454314769428, -0.661786464768388, 0.852433334796224},{-0.792520738432701, -0.114736441466899, 0.504987278980457, 0.865755194170121},{-1.200296407055776, -0.334501235840948, -0.474945311160956, -0.653329232573712},{1.765454240281097, 0.404981710960956, -1.260883954335045, 0.917861947054776},{2.122156197012633, 1.032465260551147, -1.519369965954013, -0.484234072866251},{1.266911149186623, -0.707669465618781, 0.443819428146228, 0.774634053429337},{-0.926930471578083, -0.059525356061800, -3.241267340069073, -1.024387641334290}};
        wo = new double[][] {{-0.252568151393160, -0.826125194185402, 1.485657283856771},{-1.430141377960633, -1.112833281350256, -1.850528283782044},{1.441273289066116, -1.479330644018120, 0.527181611030558},{0.010233061019587, -1.151430184986868, -0.509559277927430}};
        LongStrings longStrings = new LongStrings();
        distinctBSSID = longStrings.getDistinctBSSID();
    }

    private double[] getNewDataPoint(List<ScanResult> scanResults) {
        double[] newDataPoint = new double[distinctBSSID.length];
        for(ScanResult result : scanResults) {
            for (int i = 0; i < distinctBSSID.length; i++) {
                if(distinctBSSID[i].equals(result.BSSID)) {
                    newDataPoint[i] = result.level;
                }
            }
        }
        return newDataPoint;
    }

    private double[] getLocation(double[] dataPoint) {

        double[] zh = multiply(dataPoint, wh);
        for (int i = 0; i < zh.length; i++) {
            zh[i] += bh[i];
        }
        double[] ah = zh;

        double[] zo = multiply(ah, wo);
        for (int i = 0; i < zo.length; i++) {
            zo[i] += bo[i];
        }

        double[] ao = softmax(zo);

        return ao;
    }

    private double[] multiply(double[] a, double[][] b) {
        double[] c = new double[b[0].length];
        for (int i = 0; i < a.length; i++) {
            for (int j = 0; j < b[0].length; j++) {
                c[j] = 0;
                for (int k = 0; k < a.length; k++) {
                    c[j] += a[k] * b[k][j];
                }
            }
        }
        return c;
    }

    private double[] softmax(double[] matrice) {
        for (int i = 0; i < matrice.length; i++) {
            matrice[i] = Math.exp(matrice[i]);
        }
        double sum = Arrays.stream(matrice).sum();

        for (int i = 0; i < matrice.length; i++) {
            matrice[i] = matrice[i] / sum;
        }
        return matrice;
    }

    public double[] getPrediction(List<ScanResult> scanResult) {
        double[] newDataPoint = getNewDataPoint(scanResult);

        return getLocation(newDataPoint);
    }
}

